name: Continues Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_test:
    runs-on: ubuntu-latest
    name: Build and Test
    env:
      RUSTFLAGS: -D warnings
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: Format check
        run: cargo fmt --check --all
      - name: Check build (Strict)
        run: cargo build --workspace --verbose --release
      - uses: actions-rs/cargo@v1
        with:
          command: clean
      - name: Run test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast  # Customize args for your own needs
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      - id: Generate coverage
        uses: actions-rs/grcov@v0.1
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          file: tests.lcov
          flags: unittests
          name: code-coverage-report
          fail_ci_if_error: true